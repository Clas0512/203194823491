// Generated by gencpp from file calculate_factorial/server.msg
// DO NOT EDIT!


#ifndef CALCULATE_FACTORIAL_MESSAGE_SERVER_H
#define CALCULATE_FACTORIAL_MESSAGE_SERVER_H

#include <ros/service_traits.h>


#include <calculate_factorial/serverRequest.h>
#include <calculate_factorial/serverResponse.h>


namespace calculate_factorial
{

struct server
{

typedef serverRequest Request;
typedef serverResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct server
} // namespace calculate_factorial


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::calculate_factorial::server > {
  static const char* value()
  {
    return "e88fc063c14763b6e30c09ed15c1e58c";
  }

  static const char* value(const ::calculate_factorial::server&) { return value(); }
};

template<>
struct DataType< ::calculate_factorial::server > {
  static const char* value()
  {
    return "calculate_factorial/server";
  }

  static const char* value(const ::calculate_factorial::server&) { return value(); }
};


// service_traits::MD5Sum< ::calculate_factorial::serverRequest> should match 
// service_traits::MD5Sum< ::calculate_factorial::server > 
template<>
struct MD5Sum< ::calculate_factorial::serverRequest>
{
  static const char* value()
  {
    return MD5Sum< ::calculate_factorial::server >::value();
  }
  static const char* value(const ::calculate_factorial::serverRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::calculate_factorial::serverRequest> should match 
// service_traits::DataType< ::calculate_factorial::server > 
template<>
struct DataType< ::calculate_factorial::serverRequest>
{
  static const char* value()
  {
    return DataType< ::calculate_factorial::server >::value();
  }
  static const char* value(const ::calculate_factorial::serverRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::calculate_factorial::serverResponse> should match 
// service_traits::MD5Sum< ::calculate_factorial::server > 
template<>
struct MD5Sum< ::calculate_factorial::serverResponse>
{
  static const char* value()
  {
    return MD5Sum< ::calculate_factorial::server >::value();
  }
  static const char* value(const ::calculate_factorial::serverResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::calculate_factorial::serverResponse> should match 
// service_traits::DataType< ::calculate_factorial::server > 
template<>
struct DataType< ::calculate_factorial::serverResponse>
{
  static const char* value()
  {
    return DataType< ::calculate_factorial::server >::value();
  }
  static const char* value(const ::calculate_factorial::serverResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CALCULATE_FACTORIAL_MESSAGE_SERVER_H
